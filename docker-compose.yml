version: "3.3"
networks:
  conserver:
    external: true

services:
  conserver:
    container_name: "conserver"
    build:
      dockerfile: ./docker/Dockerfile
      context: .
    command: "python ./server/main.py"
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file:
      - .env
    stop_grace_period: 60s
    networks:
      - conserver

  api:
    container_name: "api"
    build:
      dockerfile: ./docker/Dockerfile
      context: .
    command: /bin/bash -c "poetry run uvicorn server.api:app --host 0.0.0.0 --port 8000"
    volumes:
      - .:/app
    depends_on:
      - redis
      - certbot
    env_file:
      - .env
    networks:
      - conserver

  redis:
    container_name: "redis"
    image: "redis/redis-stack:latest"
    ports:
      - "${REDIS_EXTERNAL_PORT:-8001}:8001"
    environment:
      REDIS_ARGS: --save 20 1
    mem_limit: 1gb # <===== IMPORTANT!!!! We're overriding this in the docker-compose.override.yml file
    volumes:
       - ./.data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - conserver
    

  certbot:
    container_name: "certbot"
    image: certbot/certbot
    ports:
      - "80:80"
    volumes:
      - certbot-data:/etc/letsencrypt
    command: certonly --standalone --agree-tos --email ${CERTBOT_EMAIL} --no-self-upgrade --non-interactive -d ${SERVER_NAME}
    networks:
      - conserver

  nginx:
    container_name: "nginx"
    image: nginx:latest
    ports:
      - "443:443"
    volumes:
      - certbot-data:/etc/letsencrypt
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - certbot
    networks:
      - conserver
    environment:
      - SERVER_NAME=${SERVER_NAME}

volumes:
  certbot-data:

